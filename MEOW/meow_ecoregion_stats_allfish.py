#!/usr/bin/env python
"""
meow_ecoregion_stats_allfish.py

Calculate stats on a per-MEOW 2007 ecoregion, for all fish habitats

Author: Shaun C. Walbridge
""" 

import sys
import os
import math
import glob

from histo_class import calculate_histogram, calculate_range

def getOpts():
   meow_raster = 'meow_2007_200m_raster'
   meow_vector = 'meow_2007_clipped_200m'
   threat_raster = 'threat_sum_export_clean'
   column = 'ECO_CODE'
   prefix = 'meow_ecoregion'
   return (meow_raster, meow_vector, threat_raster, column, prefix)

def getEnv():
    cmd = "g.gisenv"
    lines = os.popen(cmd).read().rstrip().replace("'","").replace(';','').split("\n")
    env = {}
    for o in [i.split('=') for i in lines]:
        env[o[0]] = o[1]

    return env

def getPath():
    # return raster path
    env = getEnv()
    return "%s/%s/%s/cellhd/" % (env['GISDBASE'],env['LOCATION_NAME'],env['MAPSET'])
    
if __name__ == '__main__':
    (meow_raster, meow_vector, threat_raster, column, prefix) = getOpts()
    # reset region to the default
    cmd = 'g.region -dp'
    os.popen(cmd)

    area_list = [['20001', '159815'], ['20002', '33309'], ['20003', '136244'], ['20004', '186227'], ['20005', '150431'], ['20006', '130232'], ['20008', '1283002'], ['20011', '332046'], ['20012', '119134'], ['20013', '627517'], ['20015', '1026426'], ['20016', '566815'], ['20017', '838536'], ['20018', '863000'], ['20019', '97688'], ['20020', '96832'], ['20021', '28343'], ['20022', '66747'], ['20023', '99132'], ['20024', '413618'], ['20025', '701551'], ['20026', '489481'], ['20027', '151869'], ['20028', '128398'], ['20029', '8934'], ['20030', '117670'], ['20037', '244337'], ['20038', '267429'], ['20039', '116843'], ['20041', '171596'], ['20043', '288652'], ['20044', '161175'], ['20045', '541574'], ['20047', '56191'], ['20048', '30567'], ['20049', '182642'], ['20050', '496610'], ['20051', '78819'], ['20052', '637680'], ['20053', '56555'], ['20054', '266129'], ['20060', '100026'], ['20061', '28424'], ['20062', '1079'], ['20063', '130055'], ['20064', '25051'], ['20065', '94670'], ['20066', '116509'], ['20067', '162103'], ['20068', '32505'], ['20069', '226575'], ['20070', '138131'], ['20071', '214530'], ['20072', '328819'], ['20074', '379'], ['20075', '85891'], ['20076', '119967'], ['20077', '53'], ['20078', '741'], ['20079', '5470'], ['20082', '33158'], ['20083', '87556'], ['20084', '2049'], ['20087', '62886'], ['20088', '164595'], ['20089', '44708'], ['20090', '274434'], ['20091', '50122'], ['20092', '55245'], ['20093', '29637'], ['20094', '13216'], ['20095', '41082'], ['20096', '45354'], ['20097', '68194'], ['20098', '4058'], ['20099', '25127'], ['20100', '82351'], ['20101', '58988'], ['20102', '27832'], ['20103', '324581'], ['20104', '73855'], ['20105', '42993'], ['20106', '23799'], ['20107', '44437'], ['20108', '236436'], ['20109', '43404'], ['20110', '176049'], ['20111', '78043'], ['20112', '237444'], ['20113', '250702'], ['20114', '31513'], ['20115', '309907'], ['20116', '126227'], ['20117', '1498445'], ['20118', '153813'], ['20119', '59686'], ['20120', '849'], ['20121', '29410'], ['20122', '2753'], ['20123', '1598'], ['20124', '20344'], ['20125', '5912'], ['20126', '234104'], ['20127', '145640'], ['20128', '191007'], ['20129', '36534'], ['20130', '116382'], ['20131', '105505'], ['20132', '44693'], ['20133', '30352'], ['20134', '30891'], ['20135', '45419'], ['20136', '70250'], ['20137', '8648'], ['20138', '55038'], ['20139', '405646'], ['20140', '664654'], ['20141', '374446'], ['20142', '112717'], ['20143', '220900'], ['20144', '331731'], ['20145', '9238'], ['20146', '8561'], ['20148', '12457'], ['20149', '65987'], ['20150', '15073'], ['20151', '5314'], ['20153', '22067'], ['20155', '2117'], ['20156', '1456'], ['20157', '3787'], ['20158', '27811'], ['20159', '388'], ['20160', '1312'], ['20161', '1904'], ['20162', '1687'], ['20163', '312'], ['20164', '280'], ['20165', '26'], ['20166', '12324'], ['20167', '93539'], ['20168', '25642'], ['20169', '355'], ['20170', '57597'], ['20171', '28179'], ['20172', '61'], ['20173', '8734'], ['20174', '1446'], ['20175', '62872'], ['20176', '24261'], ['20177', '7390'], ['20178', '29753'], ['20179', '839'], ['20180', '171875'], ['20181', '111574'], ['20182', '35895'], ['20183', '287134'], ['20186', '174658'], ['20187', '130994'], ['20188', '53118'], ['20189', '3884'], ['20191', '92155'], ['20192', '102710'], ['20193', '17839'], ['20194', '153'], ['20197', '5842'], ['20200', '36763'], ['20201', '17069'], ['20202', '46846'], ['20203', '21321'], ['20204', '67520'], ['20205', '108362'], ['20206', '78837'], ['20207', '111447'], ['20208', '162280'], ['20209', '80393'], ['20210', '59380'], ['20211', '36531'], ['20212', '538'], ['20213', '7375'], ['20214', '71148'], ['20215', '7898'], ['20216', '792'], ['20217', '187'], ['20218', '476'], ['20219', '1120'], ['20220', '25644'], ['20221', '8954'], ['20222', '20918'], ['20223', '295422'], ['20224', '2310068'], ['20225', '255292'], ['20226', '822395'], ['20227', '1954660'], ['20228', '1166446'], ['20229', '1411799'], ['20231', '10382'], ['20232', '14611'], ['25007', '58813'], ['25009', '195644'], ['25010', '166435'], ['25014', '1026762'], ['25031', '85712'], ['25032', '63563'], ['25033', '129303'], ['25034', '45985'], ['25035', '122450'], ['25036', '12688'], ['25040', '133685'], ['25042', '115211'], ['25046', '88014'], ['25055', '108835'], ['25056', '13702'], ['25057', '55639'], ['25058', '22295'], ['25059', '41841'], ['25080', '61400'], ['25081', '147825'], ['25085', '46369'], ['25086', '40008'], ['25147', '47402'], ['25152', '19314'], ['25154', '12098'], ['25184', '238513'], ['25185', '450598'], ['25190', '66223'], ['25195', '442'], ['25196', '38384'], ['25198', '13456'], ['25199', '156810'], ['25230', '5793']]
    
    # area_list = [['20002', '33309'], ['20003', '136244'], ['20004', '186227']]

    # globals for missing ecoregion data
    meow_raster = 'meow_2007_200m_raster'
    threat_raster = 'threat_sum_export_clean'

    ecoregion_stats = []
    # process a single element
    for region in area_list:
        (ecoregion, cell_count_str) = region
        cell_count = int(cell_count_str) 

        # extract from the source vector the area with the ecoregion
        vname = '%s_%s' % (prefix, ecoregion)
        rname = '%s_%s_threat' % (prefix, ecoregion)

        # check for existence of threat layer
        cmd = 'r.info %s' % rname
        (stdout, stderr) = os.popen4(cmd)
        # if the raster doesn't exist, generate it
        if stderr.read().startswith('ERROR'):
            cmd = 'v.extract input=%s output=%s where="%s = %s"' % (meow_vector, vname, column, ecoregion)
            os.popen(cmd)

            # set the region to the new vector file
            cmd = 'g.region vect=%s' % vname
            os.popen(cmd)

            # generate a raster containing the threat model values in this ecoregion
            cmd = "r.mapcalc %s='if(%s == %s, %s, null())'" % (rname, meow_raster, ecoregion, threat_raster)
            os.popen(cmd)

        # set region to the threat layer to improve performance
        cmd = 'g.region rast=%s' % rname
        os.popen(cmd)

        # combine cumulative impact layer with ecoregion
        threat_layer = 'all_fish_impact'
        histogram_layer = 'all_fish_impact_%s' % ecoregion

        cmd = "r.mapcalc %s='if(%s, %s, null())'" % (histogram_layer, rname, threat_layer)
        os.popen(cmd)
        print "Running %s" % cmd

        range = calculate_range(histogram_layer) 
        print "Range is %f for %s\n\n" % (range, ecoregion)
        calculate_histogram(int(range*100), histogram_layer, "%s_%s" % (histogram_layer, 'fine'), True)

    # reset region
    cmd = 'g.region -dp'
    os.popen(cmd)
